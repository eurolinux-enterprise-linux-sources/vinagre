From 6c52168b3b3f1fddf6b21c01f69e2fb8bdd7ecd5 Mon Sep 17 00:00:00 2001
From: Marek Kasik <mkasik@redhat.com>
Date: Tue, 15 Sep 2015 16:38:09 +0200
Subject: [PATCH] Store credentials for RDP

Store credentials using secrets service if requested.
Handle unsuccessful authentications by asking user for credentials.

https://bugzilla.gnome.org/show_bug.cgi?id=753355
---
 plugins/rdp/vinagre-rdp-connection.c |  21 +++-
 plugins/rdp/vinagre-rdp-plugin.c     |  29 ++++-
 plugins/rdp/vinagre-rdp-tab.c        | 231 ++++++++++++++++++-----------------
 3 files changed, 159 insertions(+), 122 deletions(-)

diff --git a/plugins/rdp/vinagre-rdp-connection.c b/plugins/rdp/vinagre-rdp-connection.c
index 99182c7..66cf01f 100644
--- a/plugins/rdp/vinagre-rdp-connection.c
+++ b/plugins/rdp/vinagre-rdp-connection.c
@@ -58,8 +58,25 @@ rdp_parse_item (VinagreConnection *conn, xmlNode *root)
 static void
 rdp_parse_options_widget (VinagreConnection *conn, GtkWidget *widget)
 {
-  GtkWidget *u_entry, *spin_button;
-  guint      width, height;
+  const gchar *text;
+  GtkWidget   *u_entry, *d_entry, *spin_button, *scaling_button;
+  gboolean     scaling;
+  guint        width, height;
+
+  d_entry = g_object_get_data (G_OBJECT (widget), "domain_entry");
+  if (!d_entry)
+    {
+      g_warning ("Wrong widget passed to rdp_parse_options_widget()");
+      return;
+    }
+
+  text = gtk_entry_get_text (GTK_ENTRY (d_entry));
+  vinagre_cache_prefs_set_string  ("rdp-connection", "domain", text);
+
+  g_object_set (conn,
+		"domain", text != NULL && *text != '\0' ? text : NULL,
+		NULL);
+
 
   u_entry = g_object_get_data (G_OBJECT (widget), "username_entry");
   if (!u_entry)
diff --git a/plugins/rdp/vinagre-rdp-plugin.c b/plugins/rdp/vinagre-rdp-plugin.c
index 3929065..dae9ed3 100644
--- a/plugins/rdp/vinagre-rdp-plugin.c
+++ b/plugins/rdp/vinagre-rdp-plugin.c
@@ -100,7 +100,7 @@ vinagre_rdp_plugin_init (VinagreRdpPlugin *plugin)
 static GtkWidget *
 impl_get_connect_widget (VinagreProtocol *plugin, VinagreConnection *conn)
 {
-  GtkWidget *grid, *label, *u_entry, *spin_button;
+  GtkWidget *grid, *label, *u_entry, *d_entry, *spin_button, *check;
   gchar     *str;
   gint       width, height;
 
@@ -134,10 +134,29 @@ impl_get_connect_widget (VinagreProtocol *plugin, VinagreConnection *conn)
   g_free (str);
 
 
+  label = gtk_label_new_with_mnemonic (_("_Domain:"));
+  gtk_misc_set_alignment (GTK_MISC (label), 0.0, 0.5);
+  gtk_grid_attach (GTK_GRID (grid), label, 0, 3, 1, 1);
+  gtk_widget_set_margin_left (label, 12);
+
+  d_entry = gtk_entry_new ();
+  /* Translators: This is the tooltip for the domain field in a RDP connection */
+  gtk_widget_set_tooltip_text (d_entry, _("Optional."));
+  g_object_set_data (G_OBJECT (grid), "domain_entry", d_entry);
+  gtk_grid_attach (GTK_GRID (grid), d_entry, 1, 3, 1, 1);
+  gtk_label_set_mnemonic_widget (GTK_LABEL (label), d_entry);
+  str = g_strdup (VINAGRE_IS_CONNECTION (conn) ?
+		  vinagre_connection_get_domain (conn) :
+		  vinagre_cache_prefs_get_string  ("rdp-connection", "domain", ""));
+  gtk_entry_set_text (GTK_ENTRY (d_entry), str);
+  gtk_entry_set_activates_default (GTK_ENTRY (d_entry), TRUE);
+  g_free (str);
+
+
   /* Host width */
   label = gtk_label_new_with_mnemonic (_("_Width:"));
   gtk_misc_set_alignment (GTK_MISC (label), 0.0, 0.5);
-  gtk_grid_attach (GTK_GRID (grid), label, 0, 2, 1, 1);
+  gtk_grid_attach (GTK_GRID (grid), label, 0, 4, 1, 1);
   gtk_widget_set_margin_left (label, 12);
 
   spin_button = gtk_spin_button_new_with_range (MIN_SIZE, MAX_SIZE, 1);
@@ -145,7 +164,7 @@ impl_get_connect_widget (VinagreProtocol *plugin, VinagreConnection *conn)
   gtk_widget_set_tooltip_text (spin_button, _("Set width of the remote desktop"));
   gtk_spin_button_set_value (GTK_SPIN_BUTTON (spin_button), DEFAULT_WIDTH);
   g_object_set_data (G_OBJECT (grid), "width_spin_button", spin_button);
-  gtk_grid_attach (GTK_GRID (grid), spin_button, 1, 2, 1, 1);
+  gtk_grid_attach (GTK_GRID (grid), spin_button, 1, 4, 1, 1);
   gtk_label_set_mnemonic_widget (GTK_LABEL (label), spin_button);
   width = VINAGRE_IS_CONNECTION (conn) ?
           vinagre_connection_get_width (conn) :
@@ -157,7 +176,7 @@ impl_get_connect_widget (VinagreProtocol *plugin, VinagreConnection *conn)
   /* Host height */
   label = gtk_label_new_with_mnemonic (_("_Height:"));
   gtk_misc_set_alignment (GTK_MISC (label), 0.0, 0.5);
-  gtk_grid_attach (GTK_GRID (grid), label, 0, 3, 1, 1);
+  gtk_grid_attach (GTK_GRID (grid), label, 0, 5, 1, 1);
   gtk_widget_set_margin_left (label, 12);
 
   spin_button = gtk_spin_button_new_with_range (MIN_SIZE, MAX_SIZE, 1);
@@ -165,7 +184,7 @@ impl_get_connect_widget (VinagreProtocol *plugin, VinagreConnection *conn)
   gtk_widget_set_tooltip_text (spin_button, _("Set height of the remote desktop"));
   gtk_spin_button_set_value (GTK_SPIN_BUTTON (spin_button), DEFAULT_HEIGHT);
   g_object_set_data (G_OBJECT (grid), "height_spin_button", spin_button);
-  gtk_grid_attach (GTK_GRID (grid), spin_button, 1, 3, 1, 1);
+  gtk_grid_attach (GTK_GRID (grid), spin_button, 1, 5, 1, 1);
   gtk_label_set_mnemonic_widget (GTK_LABEL (label), spin_button);
   height = VINAGRE_IS_CONNECTION (conn) ?
            vinagre_connection_get_height (conn) :
diff --git a/plugins/rdp/vinagre-rdp-tab.c b/plugins/rdp/vinagre-rdp-tab.c
index c4c11f8..90eea1c 100644
--- a/plugins/rdp/vinagre-rdp-tab.c
+++ b/plugins/rdp/vinagre-rdp-tab.c
@@ -62,6 +62,13 @@ struct _VinagreRdpTabPrivate
   guint            key_press_handler_id;
   guint            key_release_handler_id;
   guint            motion_notify_handler_id;
+
+  GSList          *connected_actions;
+  double           scale;
+  double           offset_x, offset_y;
+
+  guint            authentication_attempts;
+  gboolean         authentication_cancelled;
 };
 
 G_DEFINE_TYPE (VinagreRdpTab, vinagre_rdp_tab, VINAGRE_TYPE_TAB)
@@ -391,6 +398,7 @@ frdp_post_connect (freerdp *instance)
                               0, 0,
                               gdi->width, gdi->height);
 
+  vinagre_tab_save_credentials_in_keyring (VINAGRE_TAB (rdp_tab));
   vinagre_tab_add_recent_used (VINAGRE_TAB (rdp_tab));
   vinagre_tab_set_state (VINAGRE_TAB (rdp_tab), VINAGRE_TAB_STATE_CONNECTED);
 
@@ -633,114 +641,77 @@ frdp_mouse_moved (GtkWidget      *widget,
   return TRUE;
 }
 
-static void
-entry_text_changed_cb (GtkEntry   *entry,
-                       GtkBuilder *builder)
-{
-  const gchar *text;
-  GtkWidget   *widget;
-  gsize        username_length;
-  gsize        password_length;
-
-  widget = GTK_WIDGET (gtk_builder_get_object (builder, "username_entry"));
-  text = gtk_entry_get_text (GTK_ENTRY (widget));
-  username_length = strlen (text);
-
-  widget = GTK_WIDGET (gtk_builder_get_object (builder, "password_entry"));
-  text = gtk_entry_get_text (GTK_ENTRY (widget));
-  password_length = strlen (text);
-
-  widget = GTK_WIDGET (gtk_builder_get_object (builder, "ok_button"));
-  gtk_widget_set_sensitive (widget, password_length > 0 && username_length > 0);
-}
-
 static gboolean
 frdp_authenticate (freerdp  *instance,
                    char    **username,
                    char    **password,
                    char    **domain)
 {
-  VinagreTab        *tab = VINAGRE_TAB (((frdpContext *) instance->context)->rdp_tab);
-  VinagreConnection *conn = vinagre_tab_get_conn (tab);
-  const gchar       *user_name;
-  const gchar       *domain_name;
-  GtkBuilder        *builder;
-  GtkWidget         *dialog;
-  GtkWidget         *widget;
-  GtkWidget         *username_entry;
-  GtkWidget         *password_entry;
-  GtkWidget         *domain_entry;
-  gboolean           save_credential_check_visible;
-  gboolean           domain_label_visible;
-  gboolean           domain_entry_visible;
-  gint               response;
-
-  builder = vinagre_utils_get_builder ();
-
-  dialog = GTK_WIDGET (gtk_builder_get_object (builder, "auth_required_dialog"));
-  gtk_window_set_modal ((GtkWindow *) dialog, TRUE);
-  gtk_window_set_transient_for ((GtkWindow *) dialog, GTK_WINDOW (vinagre_tab_get_window (tab)));
-
-  widget = GTK_WIDGET (gtk_builder_get_object (builder, "host_label"));
-  gtk_label_set_text (GTK_LABEL (widget), vinagre_connection_get_host (conn));
+  VinagreTab           *tab = VINAGRE_TAB (((frdpContext *) instance->context)->rdp_tab);
+  VinagreRdpTab        *rdp_tab = VINAGRE_RDP_TAB (tab);
+  VinagreRdpTabPrivate *priv = rdp_tab->priv;
+  VinagreConnection    *conn = vinagre_tab_get_conn (tab);
+  GtkWindow            *window = GTK_WINDOW (vinagre_tab_get_window (tab));
+  gboolean              save_in_keyring = FALSE;
+  gchar                *keyring_domain = NULL;
+  gchar                *keyring_username = NULL;
+  gchar                *keyring_password = NULL;
 
-  username_entry = GTK_WIDGET (gtk_builder_get_object (builder, "username_entry"));
-  password_entry = GTK_WIDGET (gtk_builder_get_object (builder, "password_entry"));
-  domain_entry = GTK_WIDGET (gtk_builder_get_object (builder, "domain_entry"));
+  priv->authentication_attempts++;
 
-  if (*username != NULL && *username[0] != '\0')
+  if (priv->authentication_attempts == 1)
     {
-      gtk_entry_set_text (GTK_ENTRY (username_entry), *username);
-      gtk_widget_grab_focus (password_entry);
-    }
-
-  g_signal_connect (username_entry, "changed", G_CALLBACK (entry_text_changed_cb), builder);
-  g_signal_connect (password_entry, "changed", G_CALLBACK (entry_text_changed_cb), builder);
-
-
-  widget = GTK_WIDGET (gtk_builder_get_object (builder, "save_credential_check"));
-  save_credential_check_visible = gtk_widget_get_visible (widget);
-  gtk_widget_set_visible (widget, FALSE);
-
-  widget = GTK_WIDGET (gtk_builder_get_object (builder, "domain_label"));
-  domain_label_visible = gtk_widget_get_visible (widget);
-  gtk_widget_set_visible (widget, TRUE);
-
-  domain_entry_visible = gtk_widget_get_visible (domain_entry);
-  gtk_widget_set_visible (domain_entry, TRUE);
-
-
-  response = gtk_dialog_run (GTK_DIALOG (dialog));
-  gtk_widget_hide (dialog);
-
-
-  widget = GTK_WIDGET (gtk_builder_get_object (builder, "save_credential_check"));
-  gtk_widget_set_visible (widget, save_credential_check_visible);
-
-  widget = GTK_WIDGET (gtk_builder_get_object (builder, "domain_label"));
-  gtk_widget_set_visible (widget, domain_label_visible);
-
-  gtk_widget_set_visible (domain_entry, domain_entry_visible);
+      vinagre_tab_find_credentials_in_keyring (tab, &keyring_domain, &keyring_username, &keyring_password);
+      if (keyring_password != NULL && keyring_username != NULL)
+        {
+          *domain = keyring_domain;
+          *username = keyring_username;
+          *password = keyring_password;
 
+          return TRUE;
+        }
+      else
+        {
+          g_free (keyring_domain);
+          g_free (keyring_username);
+          g_free (keyring_password);
+        }
+    }
 
-  if (response == GTK_RESPONSE_OK)
+  if (vinagre_utils_request_credential (window,
+                                        "RDP",
+                                        vinagre_connection_get_host (conn),
+                                        vinagre_connection_get_domain (conn),
+                                        vinagre_connection_get_username (conn),
+                                        TRUE,
+                                        TRUE,
+                                        TRUE,
+                                        20,
+                                        domain,
+                                        username,
+                                        password,
+                                        &save_in_keyring))
     {
-      domain_name = gtk_entry_get_text (GTK_ENTRY (domain_entry));
-      if (g_strcmp0 (*domain, domain_name) != 0)
-        *domain = g_strdup (domain_name);
+      if (*domain && **domain != '\0')
+        vinagre_connection_set_domain (conn, *domain);
 
-      user_name = gtk_entry_get_text (GTK_ENTRY (username_entry));
-      if (g_strcmp0 (*username, user_name) != 0)
-        *username = g_strdup (user_name);
+      if (*username && **username != '\0')
+        vinagre_connection_set_username (conn, *username);
 
-      *password = g_strdup (gtk_entry_get_text (GTK_ENTRY (password_entry)));
+      if (*password && **password != '\0')
+        vinagre_connection_set_password (conn, *password);
 
-      return TRUE;
+      vinagre_tab_set_save_credentials (tab, save_in_keyring);
     }
   else
     {
+      vinagre_tab_remove_from_notebook (tab);
+      priv->authentication_cancelled = TRUE;
+
       return FALSE;
     }
+
+  return TRUE;
 }
 
 static BOOL
@@ -837,29 +808,23 @@ frdp_changed_certificate_verify (freerdp *instance,
 #endif
 
 static void
-open_freerdp (VinagreRdpTab *rdp_tab)
+init_freerdp (VinagreRdpTab *rdp_tab)
 {
   VinagreRdpTabPrivate *priv = rdp_tab->priv;
+  rdpSettings          *settings;
   VinagreTab           *tab = VINAGRE_TAB (rdp_tab);
   VinagreConnection    *conn = vinagre_tab_get_conn (tab);
-  rdpSettings          *settings;
-  GtkWindow            *window = GTK_WINDOW (vinagre_tab_get_window (tab));
-  gboolean              success = TRUE;
-  gboolean              fullscreen;
-  gchar                *hostname, *username;
-  gint                  port, width, height;
+  gchar                *hostname;
+  gint                  width, height;
+  gint                  port;
 
   g_object_get (conn,
                 "port", &port,
                 "host", &hostname,
                 "width", &width,
                 "height", &height,
-                "fullscreen", &fullscreen,
-                "username", &username,
                 NULL);
 
-  priv->events = g_queue_new ();
-
   /* Setup FreeRDP session */
   priv->freerdp_session = freerdp_new ();
   priv->freerdp_session->PreConnect = frdp_pre_connect;
@@ -919,23 +884,29 @@ open_freerdp (VinagreRdpTab *rdp_tab)
   settings->port = port;
 #endif
 
-  /* Set username */
-  username = g_strstrip (username);
-  if (username != NULL && username[0] != '\0')
-    {
-#if HAVE_FREERDP_1_1
-      settings->Username = g_strdup (username);
-#else
-      settings->username = g_strdup (username);
-#endif
-    }
-
   /* Set keyboard layout */
 #if HAVE_FREERDP_1_1
   freerdp_keyboard_init (KBD_US);
 #else
   freerdp_kbd_init (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), KBD_US);
 #endif
+}
+
+static void
+init_display (VinagreRdpTab *rdp_tab)
+{
+  VinagreRdpTabPrivate *priv = rdp_tab->priv;
+  VinagreTab           *tab = VINAGRE_TAB (rdp_tab);
+  VinagreConnection    *conn = vinagre_tab_get_conn (tab);
+  GtkWindow            *window = GTK_WINDOW (vinagre_tab_get_window (tab));
+  gboolean              fullscreen;
+  gint                  width, height;
+
+  g_object_get (conn,
+                "width", &width,
+                "height", &height,
+                "fullscreen", &fullscreen,
+                NULL);
 
   /* Setup display for FreeRDP session */
   priv->display = gtk_drawing_area_new ();
@@ -984,22 +955,52 @@ open_freerdp (VinagreRdpTab *rdp_tab)
   priv->key_release_handler_id = g_signal_connect (window, "key-release-event",
                                                    G_CALLBACK (frdp_key_pressed),
                                                    rdp_tab);
+}
 
-  /* Run FreeRDP session */
-  success = freerdp_connect (priv->freerdp_session);
+static void
+open_freerdp (VinagreRdpTab *rdp_tab)
+{
+  VinagreRdpTabPrivate *priv = rdp_tab->priv;
+  VinagreTab           *tab = VINAGRE_TAB (rdp_tab);
+  GtkWindow            *window = GTK_WINDOW (vinagre_tab_get_window (tab));
+  gboolean              success = TRUE;
+
+  priv->events = g_queue_new ();
+
+  init_freerdp (rdp_tab);
+  init_display (rdp_tab);
+  priv->authentication_cancelled = FALSE;
+
+  do
+    {
+      /* Run FreeRDP session */
+      success = freerdp_connect (priv->freerdp_session);
+      if (!success)
+        {
+          freerdp_free (priv->freerdp_session);
+          init_freerdp (rdp_tab);
+        }
+    }
+  while (!success &&
+         priv->authentication_attempts > 3 &&
+         !priv->authentication_cancelled);
 
   if (!success)
     {
       gtk_window_unfullscreen (window);
-      vinagre_utils_show_error_dialog (_("Error connecting to host."),
-                                       NULL,
-                                       window);
+      if (!priv->authentication_cancelled)
+        vinagre_utils_show_error_dialog (_("Error connecting to host."),
+                                         NULL,
+                                         window);
       g_idle_add ((GSourceFunc) idle_close, rdp_tab);
     }
   else
     {
+      priv->authentication_attempts = 0;
       priv->update_id = g_idle_add ((GSourceFunc) update, rdp_tab);
     }
+
+  priv->authentication_attempts = 0;
 }
 
 static void
-- 
2.5.5

