--- vinagre-2.28.1/vinagre/vinagre-plugins-engine.c
+++ vinagre-2.28.1/vinagre/vinagre-plugins-engine.c
@@ -262,23 +262,14 @@ add_loader (VinagrePluginsEngine *engine
 static void
 activate_engine_plugins (VinagrePluginsEngine *engine)
 {
-  GSList *active_plugins, *l;
+  GSList *l;
 
   vinagre_debug_message (DEBUG_PLUGINS, "Activating engine plugins");
 
-  g_object_get (vinagre_prefs_get_default (),
-		"active-plugins", &active_plugins,
-		NULL);
-
   for (l = engine->priv->plugin_list; l; l = l->next)
     {
       VinagrePluginInfo *info = (VinagrePluginInfo*)l->data;
-		
-      if (g_slist_find_custom (active_plugins,
-			       vinagre_plugin_info_get_module_name (info),
-			       (GCompareFunc)strcmp) == NULL)
-	continue;
-		
+
       if (vinagre_plugin_info_is_engine (info))
 	vinagre_plugins_engine_activate_plugin (engine, info);
     }
@@ -301,10 +292,6 @@ vinagre_plugins_engine_init (VinagrePlug
 
   load_all_plugins (engine);
 
-  /* make sure that the first reactivation will read active plugins
-     from the prefs */
-  engine->priv->activate_from_prefs = TRUE;
-
   /* mapping from loadername -> loader object */
   engine->priv->loaders = g_hash_table_new_full (hash_lowercase,
 						 equal_lowercase,
@@ -549,27 +536,6 @@ vinagre_plugins_engine_get_plugin_info (
   return l == NULL ? NULL : (VinagrePluginInfo *) l->data;
 }
 
-static void
-save_active_plugin_list (VinagrePluginsEngine *engine)
-{
-  GSList *l, *active_plugins = NULL;
-
-  for (l = engine->priv->plugin_list; l != NULL; l = l->next)
-    {
-      VinagrePluginInfo *info = (VinagrePluginInfo *) l->data;
-
-      if (vinagre_plugin_info_is_active (info))
-	active_plugins = g_slist_prepend (active_plugins,
-					  (gpointer)vinagre_plugin_info_get_module_name (info));
-    }
-
-  g_object_set (vinagre_prefs_get_default (),
-		"active-plugins", active_plugins,
-		NULL);
-
-  g_slist_free (active_plugins);
-}
-
 static gboolean
 load_plugin (VinagrePluginsEngine *engine,
       	     VinagrePluginInfo    *info)
@@ -661,9 +627,6 @@ vinagre_plugins_engine_activate_plugin (
 
   g_signal_emit (engine, signals[ACTIVATE_PLUGIN], 0, info);
 
-  if (vinagre_plugin_info_is_active (info))
-    save_active_plugin_list (engine);
-
   return vinagre_plugin_info_is_active (info);
 }
 
@@ -728,8 +691,6 @@ vinagre_plugins_engine_deactivate_plugin
     return TRUE;
 
   g_signal_emit (engine, signals[DEACTIVATE_PLUGIN], 0, info);
-  if (!vinagre_plugin_info_is_active (info))
-    save_active_plugin_list (engine);
 
   return !vinagre_plugin_info_is_active (info);
 }
@@ -738,47 +699,25 @@ void
 vinagre_plugins_engine_activate_plugins (VinagrePluginsEngine *engine,
 					 VinagreWindow        *window)
 {
-  GSList *pl, *active_plugins = NULL;
+  GSList *pl;
 
   vinagre_debug (DEBUG_PLUGINS);
 
   g_return_if_fail (VINAGRE_IS_PLUGINS_ENGINE (engine));
   g_return_if_fail (VINAGRE_IS_WINDOW (window));
 
-  /* the first time, we get the 'active' plugins from gconf */
-  if (engine->priv->activate_from_prefs)
-    {
-      g_object_get (vinagre_prefs_get_default (),
-		    "active-plugins", &active_plugins,
-		    NULL);
-    }
-
   for (pl = engine->priv->plugin_list; pl; pl = pl->next)
     {
       VinagrePluginInfo *info = (VinagrePluginInfo*)pl->data;
 		
-      if (engine->priv->activate_from_prefs && 
-	  g_slist_find_custom (active_plugins,
-			       vinagre_plugin_info_get_module_name (info),
-			       (GCompareFunc)strcmp) == NULL)
-	continue;
-		
       /* If plugin is not active, don't try to activate/load it */
-      if (!engine->priv->activate_from_prefs && 
-	  !vinagre_plugin_info_is_active (info))
+      if (!vinagre_plugin_info_is_active (info))
 	continue;
 
       if (load_plugin (engine, info))
 	vinagre_plugin_activate (info->plugin, window);
     }
 	
-  if (engine->priv->activate_from_prefs)
-    {
-      g_slist_foreach (active_plugins, (GFunc) g_free, NULL);
-      g_slist_free (active_plugins);
-      engine->priv->activate_from_prefs = FALSE;
-    }
-	
   vinagre_debug_message (DEBUG_PLUGINS, "End");
 
   /* also call update_ui after activation */
